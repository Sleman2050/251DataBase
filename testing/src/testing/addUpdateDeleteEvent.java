/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testing;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Abosl
 */
public class addUpdateDeleteEvent extends javax.swing.JFrame {

    /**
     * Creates new form addEvent
     */
    public addUpdateDeleteEvent() {
        initComponents();
        show_events();
    }
    
    
    
    
    
    public ArrayList<event> eventList(){
        ArrayList<event> eventList = new ArrayList<>();
         try{
 
             
             Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost:1433;databaseName=KAU_Events_Clubs;user=sa;password=12345";
            Connection con = DriverManager.getConnection(url);
             
             
             
             
            String query1="SELECT * FROM eventBase";
            Statement st= con.createStatement();
            ResultSet rs= st.executeQuery(query1);
            event eventO;
            while(rs.next()){
                eventO=new event(rs.getInt("eventNum"), rs.getString("eventName"), rs.getString("eventDescription"), rs.getDate("eventDate"),rs.getInt("Admin_ID"));
                eventList.add(eventO);
            }
         }
         catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
         return eventList;
    }

    
     public void show_events(){
        ArrayList<event> list = eventList();
        DefaultTableModel model = (DefaultTableModel)AUDeventTable.getModel();
        Object[] row = new Object[5];
        for(int i=0;i<list.size();i++){
            row[0]=list.get(i).getEventNum();
            row[1]=list.get(i).getEventName();
            row[2]=list.get(i).getEventDescription();
            row[3]=list.get(i).getEventDate();
            row[4]=list.get(i).getAdmin_ID();
     
            model.addRow(row);
        }}
    
    
    
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        eventName = new javax.swing.JTextField();
        eventDescription = new javax.swing.JTextField();
        adminID = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        addeventButton = new javax.swing.JButton();
        DeleteeventButton = new javax.swing.JButton();
        updateEventButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AUDeventTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Event name");

        jLabel2.setText("Event description");

        jLabel3.setText("Event date ");

        jLabel4.setText("Admin ID");

        eventName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventNameActionPerformed(evt);
            }
        });

        eventDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventDescriptionActionPerformed(evt);
            }
        });

        addeventButton.setText("Add");
        addeventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addeventButtonActionPerformed(evt);
            }
        });

        DeleteeventButton.setText("Delete");
        DeleteeventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteeventButtonActionPerformed(evt);
            }
        });

        updateEventButton.setText("Update ");
        updateEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEventButtonActionPerformed(evt);
            }
        });

        AUDeventTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event Number", "Event Name", "Event Description", "Event Date", "Added By"
            }
        ));
        AUDeventTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AUDeventTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(AUDeventTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(131, 131, 131)
                                .addComponent(adminID, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(eventDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(117, 117, 117)
                                    .addComponent(eventName, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(addeventButton)
                        .addGap(44, 44, 44)
                        .addComponent(updateEventButton)
                        .addGap(33, 33, 33)
                        .addComponent(DeleteeventButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(eventName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(eventDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adminID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addeventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeleteeventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addeventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addeventButtonActionPerformed
       
        
        
         try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost:1433;databaseName=KAU_Events_Clubs;user=sa;password=12345";
            Connection con = DriverManager.getConnection(url);
            String query="insert into eventBase (eventName,eventDescription,eventDate,Admin_ID)values(?,?,?,?)";
            
            
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, eventName.getText());
            pst.setString(2, eventDescription.getText());
           java.sql.Date d1 = new java.sql.Date( jDateChooser1.getDate().getTime());
           pst.setDate(3,d1);
           String sss=adminID.getText();
           int ss=Integer.parseInt(sss);
           pst.setInt(4, ss);
           pst.executeUpdate();
           JOptionPane.showMessageDialog(null, "Event inserted successfuly ,  thank you.");
           
            
            
            
            
         }
             catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        
        
        
    }//GEN-LAST:event_addeventButtonActionPerformed

    private void eventNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventNameActionPerformed

    private void eventDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventDescriptionActionPerformed

    private void DeleteeventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteeventButtonActionPerformed



 try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost:1433;databaseName=KAU_Events_Clubs;user=sa;password=12345";
            Connection con = DriverManager.getConnection(url);
            int row= AUDeventTable.getSelectedRow();
            String value=(AUDeventTable.getModel().getValueAt(row, 0).toString());
            String query="DELETE FROM eventBase where eventNum="+value;
            PreparedStatement pst = con.prepareStatement(query);
            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel)AUDeventTable.getModel();
            model.setRowCount(0);
            show_events();
            JOptionPane.showMessageDialog(null,"Deleted Successfully!");
          }
          catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_DeleteeventButtonActionPerformed

    private void updateEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEventButtonActionPerformed

        
         try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost:1433;databaseName=KAU_Events_Clubs;user=sa;password=12345";
            Connection con = DriverManager.getConnection(url);
       
       int row= AUDeventTable.getSelectedRow();
            String value=(AUDeventTable.getModel().getValueAt(row, 0).toString());
            String query = "UPDATE eventBase SET  eventName=?,eventDescription=?,eventDate=?,Admin_ID=? where eventNum="+value;
            
           PreparedStatement pst = con.prepareStatement(query);
           String sss=eventName.getText();
           
           pst.setString(1, sss);
           pst.setString(2, eventDescription.getText());
           java.sql.Date d1 = new java.sql.Date( jDateChooser1.getDate().getTime());
           pst.setDate(3,d1);
           pst.setString(4, adminID.getText());

           pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel)AUDeventTable.getModel();
            model.setRowCount(0);
           show_events();
            JOptionPane.showMessageDialog(null, "Updated Sucessfully!");
            
            
            
       
       }
       
       catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_updateEventButtonActionPerformed

    private void AUDeventTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AUDeventTableMouseClicked
        
        
        
        
        int i = AUDeventTable.getSelectedRow();
        TableModel model =AUDeventTable.getModel();
        eventName.setText(model.getValueAt(i,1).toString());
        eventDescription.setText(model.getValueAt(i,2).toString());
        
           jDateChooser1.setDate((Date) model.getValueAt(i,3));
             adminID.setText(model.getValueAt(i,4).toString());  
   
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_AUDeventTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addUpdateDeleteEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addUpdateDeleteEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addUpdateDeleteEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addUpdateDeleteEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addUpdateDeleteEvent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AUDeventTable;
    private javax.swing.JButton DeleteeventButton;
    private javax.swing.JButton addeventButton;
    private javax.swing.JTextField adminID;
    private javax.swing.JTextField eventDescription;
    private javax.swing.JTextField eventName;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updateEventButton;
    // End of variables declaration//GEN-END:variables
}
